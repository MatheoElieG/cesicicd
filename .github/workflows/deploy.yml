name: GitHub Actions CI/CD
run-name: Build & Test

on:
  push:
    branches:
      - develop
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-cache

      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - run: npm ci

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-videos
          path: cypress/videos
          overwrite: true

      - run: npm run e2e:headless

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: >-
            ${{ github.ref_name == 'main' && 'ghcr.io/matheoelieg/cesicicd/app:latest' || 'ghcr.io/matheoelieg/cesicicd/app-rc:latest' }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to staging
        if: github.ref_name == 'develop'
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_KEY }}
          port: 22
          script: |
            cd ~/cesicicd
            git pull
            docker pull ghcr.io/matheoelieg/cesicicd/app-rc:latest
            docker compose -f docker-compose.stagging.yml down || true
            docker compose -f docker-compose.stagging.yml run -d

      - name: Deploy to production
        if: github.ref_name == 'main'
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_KEY }}
          port: 22
          script: |
            cd ~/cesicicd
            git pull
            docker pull ghcr.io/matheoelieg/cesicicd/app:latest
            docker compose -f docker-compose.prod.yml down || true
            docker compose -f docker-compose.prod.yml run -d
